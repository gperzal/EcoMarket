---
openapi: 3.1.0
info:
  title: API de Catalogo - Ecomarket
  description: Title
  version: 1.0.0
servers:
  - url: https
paths:
  /api/catalogs:
    get:
      tags:
        - Catalogs
      summary: Obtener todos los catálogos
      responses:
        "200":
          description: Lista de catálogos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CatalogDTO"
    post:
      tags:
        - Catalogs
      summary: Crear un nuevo catálogo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogRequestDTO"
      responses:
        "201":
          description: Catálogo creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogDTO"
  "/api/catalogs/{id}":
    get:
      tags:
        - Catalogs
      summary: Obtener un catálogo por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Catálogo encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogDTO"
    put:
      tags:
        - Catalogs
      summary: Actualizar un catálogo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogRequestDTO"
      responses:
        "200":
          description: Catálogo actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogDTO"
    delete:
      tags:
        - Catalogs
      summary: Eliminar un catálogo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Eliminado correctamente
  "/api/catalogs/status/{statusId}":
    get:
      tags:
        - Catalogs
      summary: Obtener catálogos por statusId
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lista de catálogos por statusId
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CatalogDTO"
  "/api/catalogs/{id}/with-subcatalogs":
    get:
      tags:
        - Catalogs
      summary: Obtener un catálogo con subcatálogos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Catálogo con subcatálogos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogDTO"
components:
  schemas:
    CatalogDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        statusId:
          type: integer
        subcatalogIds:
          type: array
          items:
            type: integer
    CatalogRequestDTO:
      type: object
      required:
        - name
        - description
        - imageUrl
        - statusId
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        statusId:
          type: integer
